// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package jp.dip.hakuro.twitserif.web;

import jp.dip.hakuro.twitserif.domain.Serifs;
import jp.dip.hakuro.twitserif.web.ApplicationConversionServiceFactoryBean;
import org.springframework.beans.factory.annotation.Configurable;
import org.springframework.core.convert.converter.Converter;
import org.springframework.format.FormatterRegistry;

privileged aspect ApplicationConversionServiceFactoryBean_Roo_ConversionService {
    
    declare @type: ApplicationConversionServiceFactoryBean: @Configurable;
    
    public Converter<Serifs, String> ApplicationConversionServiceFactoryBean.getSerifsToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<jp.dip.hakuro.twitserif.domain.Serifs, java.lang.String>() {
            public String convert(Serifs serifs) {
                return new StringBuilder().append(serifs.getId()).append(' ').append(serifs.getScreenName()).append(' ').append(serifs.getCreatedAt()).append(' ').append(serifs.getText()).toString();
            }
        };
    }
    
    public Converter<Long, Serifs> ApplicationConversionServiceFactoryBean.getIdToSerifsConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, jp.dip.hakuro.twitserif.domain.Serifs>() {
            public jp.dip.hakuro.twitserif.domain.Serifs convert(java.lang.Long id) {
                return Serifs.findSerifs(id);
            }
        };
    }
    
    public Converter<String, Serifs> ApplicationConversionServiceFactoryBean.getStringToSerifsConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, jp.dip.hakuro.twitserif.domain.Serifs>() {
            public jp.dip.hakuro.twitserif.domain.Serifs convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Serifs.class);
            }
        };
    }
    
    public void ApplicationConversionServiceFactoryBean.installLabelConverters(FormatterRegistry registry) {
        registry.addConverter(getSerifsToStringConverter());
        registry.addConverter(getIdToSerifsConverter());
        registry.addConverter(getStringToSerifsConverter());
    }
    
    public void ApplicationConversionServiceFactoryBean.afterPropertiesSet() {
        super.afterPropertiesSet();
        installLabelConverters(getObject());
    }
    
}
